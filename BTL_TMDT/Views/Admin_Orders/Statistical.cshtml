@{
    ViewBag.Title = "Thống kê số liệu";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .container {
        background-color: #fff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        text-align: center;
        width: 100%;
        max-width: 100%;
        margin-bottom: 20px;
    }

    #orderChart, #revenueChart {
        width: 85%;
        max-width: 100%;
        margin: 20px auto;
    }

    .controls {
        margin-top: 20px;
    }

    select {
        padding: 5px;
        font-size: 16px;
    }

    button {
        padding: 10px 20px;
        font-size: 16px;
        margin-top: 20px;
        cursor: pointer;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>


<div class="container">
    <h1>@ViewBag.Title</h1>
    <canvas id="orderChart"></canvas>
    <canvas id="revenueChart"></canvas>
    <div class="controls">
        <label for="timeRange">Chọn khoảng thời gian:</label>
        <select id="timeRange">
            <option value="day">Ngày</option>
            <option value="month">Tháng</option>
            <option value="year">Năm</option>
        </select>
    </div>
    <button id="exportButton">Xuất ra Excel</button>
    <button id="printButton">In</button>
    <button id="exportPdfButton">Xuất ra PDF</button>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const orderCtx = document.getElementById('orderChart').getContext('2d');
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        const timeRangeSelector = document.getElementById('timeRange');
        const exportButton = document.getElementById('exportButton');
        const printButton = document.getElementById('printButton');
        const exportPdfButton = document.getElementById('exportPdfButton');
        const { jsPDF } = window.jspdf;

        let orderChart = new Chart(orderCtx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Số lượng đơn hàng',
                    data: [],
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        let revenueChart = new Chart(revenueCtx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Doanh thu',
                    data: [],
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        function updateChart(timeRange) {
            fetch(`/Admin_Orders/GetOrdersData?timeRange=${timeRange}`)
                .then(response => response.json())
                .then(data => {
                    const combinedArray = data.date.map((date, index) => ({
                        Date: date,
                        Count: data.count[index],
                        Revenue: data.revenue[index]
                    }));

                    if (Array.isArray(combinedArray)) {
                        const labels = combinedArray.map(item => item.Date);
                        const orderData = combinedArray.map(item => item.Count);
                        const revenueData = combinedArray.map(item => item.Revenue);

                        orderChart.data.labels = labels;
                        orderChart.data.datasets[0].data = orderData;
                        orderChart.update();

                        revenueChart.data.labels = labels;
                        revenueChart.data.datasets[0].data = revenueData;
                        revenueChart.update();
                    } else {
                        console.error("Data is not an array:", data);
                    }
                });
        }

        function exportToExcel() {
            const timeRange = timeRangeSelector.value;
            const labels = orderChart.data.labels;
            const orderData = orderChart.data.datasets[0].data;
            const revenueData = revenueChart.data.datasets[0].data;

            const worksheet = XLSX.utils.json_to_sheet([
                {},
                { "Thời gian": "", "Doanh thu": "" },
                ...labels.map((label, index) => ({
                    "Thời gian": label,
                    "Số lượng đơn hàng": orderData[index],
                    "Doanh thu": revenueData[index]
                }))
            ]);

            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, "Thống kê đơn hàng");

            XLSX.writeFile(workbook, `thong_ke_don_hang_${timeRange.toLowerCase()}.xlsx`);
        }

        function printChart() {
            const printWindow = window.open('', '_blank');
            printWindow.document.write('<html><head><title>In Thống kê đơn hàng</title>');
            printWindow.document.write('</head><body>');
            printWindow.document.write('<img src="' + orderChart.toBase64Image() + '"/>');
            printWindow.document.write('<img src="' + revenueChart.toBase64Image() + '"/>');
            printWindow.document.write('</body></html>');
            printWindow.document.close();
            printWindow.print();
        }

        function exportToPdf() {
            const pdf = new jsPDF();
            html2canvas(document.querySelector("#orderChart")).then(canvas => {
                const imgData = canvas.toDataURL("image/png");
                pdf.addImage(imgData, 'PNG', 10, 10, 190, 80);
                html2canvas(document.querySelector("#revenueChart")).then(canvas => {
                    const imgData2 = canvas.toDataURL("image/png");
                    pdf.addPage();
                    pdf.addImage(imgData2, 'PNG', 10, 10, 190, 80);
                    pdf.save('thong_ke_don_hang.pdf');
                });
            });
        }

        timeRangeSelector.addEventListener('change', function () {
            const selectedTimeRange = timeRangeSelector.value;
            updateChart(selectedTimeRange);
        });

        exportButton.addEventListener('click', function () {
            exportToExcel();
        });

        printButton.addEventListener('click', function () {
            printChart();
        });

        exportPdfButton.addEventListener('click', function () {
            exportToPdf();
        });

        // Initial update
        updateChart(timeRangeSelector.value);
    });
</script>
